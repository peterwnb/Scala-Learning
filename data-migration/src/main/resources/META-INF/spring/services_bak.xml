<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:soa="http://soa-springtag.dapeng.com/schema/service"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://soa-springtag.dapeng.com/schema/service
        http://soa-springtag.dapeng.com/schema/service/service.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--参数配置-->
    <context:property-placeholder location="classpath:config.properties" local-override="false"
                                  system-properties-mode="ENVIRONMENT"/>

    <context:component-scan base-package="com.today.*"/>

    <!--<bean id="genIdTool" class="com.today.common.GenIdTool" init-method="init" >-->
        <!--<property name="hostIp" value="${REMOTE_HOST_IP}"/>-->
        <!--<property name="port" value="${REMOTE_HOST_PORT}"/>-->
    <!--</bean>-->


    <bean id="slf4j-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="true"/>
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="3000"/>
        <property name="logSlowSql" value="true"/>
    </bean>

    <!-- 数据库和事务配置 -->
    <!--<bean id="supplierDataSourceBean" class="com.today.common.SupplierDataSource"/>-->

    <!--<bean id="supplier_dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"-->
          <!--destroy-method="close">-->
        <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
        <!--<property name="url" value="${DB_SUPPLIER_URL}"/>-->
        <!--<property name="username" value="${DB_SUPPLIER_USER}"/>-->
        <!--<property name="password" value="${DB_SUPPLIER_PASSWD}"/>-->

        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="1"/>-->
        <!--<property name="minIdle" value="1"/>-->
        <!--<property name="maxActive" value="50"/>-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="10000"/>-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->

        <!--<property name="validationQuery" value="SELECT 'x'"/>-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--<property name="testOnReturn" value="false"/>-->

        <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
        <!--&lt;!&ndash;-->
        <!--<property name="poolPreparedStatements" value="true"/>-->
        <!--<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>-->
        <!--&ndash;&gt;-->

        <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
        <!--&lt;!&ndash;-->
        <!--<property name="filters" value="stat,slf4j"/>-->
        <!--&ndash;&gt;-->
        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean="stat-filter"/>-->
                <!--<ref bean="slf4j-filter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置spring的PlatformTransactionManager，名字为默认值 &ndash;&gt;-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="supplier_dataSource"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;使用事务敏感bean&ndash;&gt;-->
    <!--<bean id="tx_supplier_dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">-->
        <!--<constructor-arg ref="supplier_dataSource"/>-->
    <!--</bean>-->

    <!--<bean id="oracleDataSourceBean" class="com.today.common.OracleDataSource"/>-->

    <!--<bean id="oracle_dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"-->
          <!--destroy-method="close">-->
        <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
        <!--<property name="url" value="${DB_ORACLE_URL}"/>-->
        <!--<property name="username" value="${DB_ORACLE_USER}"/>-->
        <!--<property name="password" value="${DB_ORACLE_PASSWD}"/>-->
        <!--<property name="driverClassName" value="${DB_DRIVER_CLASS_NAME}"/>-->


        <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
        <!--<property name="initialSize" value="1"/>-->
        <!--<property name="minIdle" value="1"/>-->
        <!--<property name="maxActive" value="50"/>-->

        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="100000"/>-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="60000"/>-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000"/>-->
        <!--&lt;!&ndash; 查询oracle专有的表保持数据库链接 &ndash;&gt;-->
        <!--<property name="validationQuery" value="SELECT 'x' FROM dual"/>-->
        <!--<property name="testWhileIdle" value="true"/>-->
        <!--<property name="testOnBorrow" value="false"/>-->
        <!--<property name="testOnReturn" value="false"/>-->


        <!--<property name="proxyFilters">-->
            <!--<list>-->
                <!--<ref bean="stat-filter"/>-->
                <!--<ref bean="slf4j-filter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->



    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <bean name="slaver" class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="192.168.20.125"/>
                    <constructor-arg index="1" value="6004" type="int"/>
                </bean>
                <bean name="master" class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="192.168.20.125"/>
                    <constructor-arg index="1" value="6004" type="int"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <!--<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">-->
        <!--<constructor-arg index="0" ref="jedisPoolConfig"/>-->
        <!--<constructor-arg index="1">-->
            <!--<list>-->
                <!--<bean name="slaver" class="redis.clients.jedis.JedisShardInfo">-->
                    <!--<constructor-arg index="0" value="127.0.0.1"/>-->
                    <!--<constructor-arg index="1" value="6379" type="int"/>-->
                <!--</bean>-->
                <!--<bean name="master" class="redis.clients.jedis.JedisShardInfo">-->
                    <!--<constructor-arg index="0" value="127.0.0.1"/>-->
                    <!--<constructor-arg index="1" value="6379" type="int"/>-->
                <!--</bean>-->
            <!--</list>-->
        <!--</constructor-arg>-->
    <!--</bean>-->

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="2048" />
        <property name="maxIdle" value="200" />
        <property name="numTestsPerEvictionRun" value="1024"/>
        <property name="timeBetweenEvictionRunsMillis" value="30000" />
        <property name="minEvictableIdleTimeMillis" value="-1" />
        <property name="softMinEvictableIdleTimeMillis" value="10000" />
        <property name="maxWaitMillis" value="1500"/>
        <property name="testOnBorrow" value="true" />
        <property name="testWhileIdle" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="jmxEnabled" value="true"/>
        <property name="jmxNamePrefix" value="youyuan"/>
        <property name="blockWhenExhausted" value="false"/>
    </bean>


    <!-- 配置spring的PlatformTransactionManager，名字为默认值 -->
    <!--<bean id="oracleTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="oracle_dataSource"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;使用事务敏感bean&ndash;&gt;-->
    <!--<bean id="tx_oracle_dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">-->
        <!--<constructor-arg ref="oracle_dataSource"/>-->
    <!--</bean>-->

    <!--<import resource="goods.xml"></import>-->
    <import resource="member.xml"></import>
    <!--<import resource="freedmud.xml"></import>-->
    <!--<import resource="category.xml"></import>-->

</beans>